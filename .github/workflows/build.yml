name: Arduino Build and Deploy to Web Flasher Branch

on:
  push:
    branches: [ 'main' ]

jobs:
  build-and-deploy:
    # Prevent workflow loops: Don't run if the commit message includes [ci skip]
    if: "contains(github.event.head_commit.message, '[ci skip]') == false"

    runs-on: ubuntu-latest
    permissions: 
      contents: write
    steps:
      # 1. Check out the 'main' branch (this is where the source code is)
      - name: Check out source branch (main)
        uses: actions/checkout@v4
        with:
          ref: main

      # 2. Set up Arduino CLI
      - name: Set up Arduino CLI
        uses: arduino/setup-arduino-cli@v2

      # 3. Install the ESP32 platform
      - name: Install ESP32 platform
        run: |
          arduino-cli core update-index
          arduino-cli core install esp32:esp32
      # 4. Install any libraries you need
      # (Uncomment and modify this section if your sketch has dependencies)
      - name: Install Libraries
        run: |
          arduino-cli lib install "Adafruit GFX Library" "Adafruit SSD1306" "SparkFun MAX3010x Pulse and Proximity Sensor Library"
      #     arduino-cli lib install "WiFi"
      #     arduino-cli lib install "ArduinoJson"

      # 5. Compile the sketch
      # ---!!! IMPORTANT: CHANGE THESE VALUES !!!---
      # --fqbn: Your Fully Qualified Board Name.
      # ./MySketch: The path to your sketch (the folder containing your .ino file)

      # 5. Compile the sketch
      - name: Compile Sketch
        run: |
          arduino-cli compile \
            --fqbn esp32:esp32:esp32 \
            --output-dir ./build \
            ./
      # 5. Check out the 'gh-pages' branch (for deployment)
      # We check it out to a *separate* subdirectory
      - name: Check out deploy branch (gh-pages)
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
      # 6. Prepare the firmware file for deployment
      - name: Prepare Firmware
        run: |
          # Create a directory structure that matches the target branch
          mkdir -p gh-pages/firmware/
          # Copy and rename the merged binary to the stable name
          cp -f ./build/max_bpm_oled_buzzer_ino.ino.merged.bin gh-pages/firmware/latest.bin

      # 7. Commit and push *only* the new binary
      - name: Commit and Push to gh-pages
        run: |
          cd ./gh-pages
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Check if there are any changes to commit
          if -z "$(git status --porcelain)"; then
            echo "No changes to commit. 'latest.bin' is already up-to-date."
          else
            # Add only the new firmware file
            git add firmware/latest.bin
            git commit -m "Update latest.bin firmware [ci skip]"
            git push
          fi

